[project]
name = "libtmux"
version = "0.37.0"
description = "Typed library that provides an ORM wrapper for tmux, a terminal multiplexer."
requires-python = ">=3.9,<4.0"
authors = [
  {name = "Tony Narlock", email = "tony@git-pull.com"}
]
license = { text = "MIT" }
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX",
  "Operating System :: MacOS :: MacOS X",
  "Environment :: Web Environment",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Topic :: System :: Shells",
  "Typing :: Typed",
]

keywords = ["tmux", "session manager", "terminal", "ncurses"]
homepage = "http://github.com/tmux-python/libtmux/"
readme = "README.md"
packages = [
  { include = "*", from = "src" },
]
include = [
  { path = "CHANGES", format = "sdist" },
  { path = "MIGRATION", format = "sdist" },
  { path = ".tmuxp.yaml", format = "sdist" },
  { path = "tests", format = "sdist" },
  { path = "docs", format = "sdist" },
  { path = "conftest.py", format = "sdist" },
]

[project.urls]
"Bug Tracker" = "https://github.com/tmux-python/libtmux/issues"
Documentation = "https://libtmux.git-pull.com"
Repository = "https://github.com/tmux-python/libtmux"
Changes = "https://github.com/tmux-python/libtmux/blob/master/CHANGES"

[tool.uv]
dev-dependencies = [
  # Docs
  "sphinx",
  "furo",
  "gp-libs",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-inline-tabs",
  "sphinxext-opengraph<0.8",
  "sphinx-copybutton",
  "sphinxext-rediraffe",
  "myst-parser>=0.18.1",
  "linkify-it-py",
  # Testing
  "gp-libs",
  "pytest",
  "pytest-rerunfailures",
  "pytest-mock",
  "pytest-watcher",
  "pytest-xdist",
  # Coverage
  "codecov",
  "coverage",
  "pytest-cov",
  # Lint
  "ruff",
  "mypy",
]

[dependency-groups]
docs = [
  "sphinx",
  "furo",
  "gp-libs",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-inline-tabs",
  "sphinxext-opengraph",
  "sphinx-copybutton",
  "sphinxext-rediraffe",
  "myst-parser",
  "linkify-it-py",
]
testing = [
  "gp-libs",
  "pytest",
  "pytest-rerunfailures",
  "pytest-mock",
  "pytest-watcher",
]
coverage =[
  "codecov",
  "coverage",
  "pytest-cov",
]
lint = [
  "ruff",
  "mypy",
]

[project.entry-points.pytest11]
libtmux = "libtmux.pytest_plugin"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
files = [
  "src",
  "tests",
]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "*/_compat.py",
  "docs/conf.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise NotImplementedError",
  "return NotImplemented",
  "def parse_args",
  "if TYPE_CHECKING:",
  "if t.TYPE_CHECKING:",
  "@overload( |$)",
]

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "UP", # pyupgrade
  "A", # flake8-builtins
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "COM", # flake8-commas
  "EM", # flake8-errmsg
  "Q", # flake8-quotes
  "PTH", # flake8-use-pathlib
  "SIM", # flake8-simplify
  "TRY", # Trycertatops
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "D", # pydocstyle
]
ignore = [
  "COM812", # missing trailing comma, ruff format conflict
]

[tool.ruff.lint.isort]
known-first-party = [
  "libtmux",
]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = [
  "--tb=short",
  "--no-header",
  "--showlocals",
  "--doctest-docutils-modules",
  "-p no:doctest",
  "--reruns=2"
]
doctest_optionflags = [
  "ELLIPSIS",
  "NORMALIZE_WHITESPACE"
]
testpaths = [
  "src/libtmux",
  "tests",
  "docs",
  "README.md",
]
filterwarnings = [
  "ignore:The frontend.Option(Parser)? class.*:DeprecationWarning::",
  "ignore::DeprecationWarning:libtmux.*:",
  "ignore::DeprecationWarning:tests:",  # tests/
]
